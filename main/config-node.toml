# This is an example configuration file for Nano. Visit https://docs.nano.org/running-a-node/configuration/ for more information.
# Fields may need to be defined in the context of a [category] above them.
# The desired configuration changes should be placed in config-node.toml in the node data path.
# To change a value from its default, uncomment (erasing #) the corresponding field.
# It is not recommended to uncomment every field, as the default value for important fields may change in the future. Only change what you need.
# Additional information for notable configuration options is available in https://docs.nano.org/running-a-node/configuration/#notable-configuration-options

[node]
# allow_local_peers = true
# background_threads = 8
# backup_before_upgrade = false
# bandwidth_limit = 10485760
# bandwidth_limit_burst_ratio = 3.0
# max_peers_per_ip = 256
# max_peers_per_subnetwork = 256
# block_processor_batch_max_time = 500
# bootstrap_bandwidth_burst_ratio = 1.0
# bootstrap_bandwidth_limit = 5242880
# bootstrap_connections = 4
# bootstrap_connections_max = 64
# bootstrap_fraction_numerator = 1
# bootstrap_frontier_request_count = 1048576
# bootstrap_initiator_threads = 1
# bootstrap_serving_threads = 1
# confirming_set_batch_time = 250
# enable_voting = false
# external_address = "::"
# external_port = 0
# io_threads = 8
# max_queued_requests = 512
# max_unchecked_blocks = 65536
# max_work_generate_multiplier = 64.0
# network_threads = 8
# online_weight_minimum = "60000000000000000000000000000000000000"
# password_fanout = 1024
# peering_port = 54000
# pow_sleep_interval = 0
# preconfigured_peers = ["peering-beta.nano.org:54000"]
# preconfigured_representatives = ["nano_1defau1t9off1ine9rep99999999999999999999999999999999wgmuzxxy"]
# receive_minimum = "1000000000000000000000000"
# rep_crawler_weight_minimum = "340282366920938463463374607431768211455"
# representative_vote_weight_minimum = "10000000000000000000000000000000"
# request_aggregator_threads = 8
# signature_checker_threads = 4
# tcp_incoming_connections_max = 2048
# tcp_io_timeout = 15
# unchecked_cutoff_time = 14400
# use_memory_pools = true
# vote_generator_delay = 100
# vote_generator_threshold = 3
# vote_minimum = "1000000000000000000000000000000000"
# work_peers = []
# work_threads = 8

[node.active_elections]
# confirmation_cache = 65536
# confirmation_history_size = 2048
# hinted_limit_percentage = 20
# optimistic_limit_percentage = 10
# size = 5000

[node.block_processor]
# max_peer_queue = 128
# max_system_queue = 16384
# priority_bootstrap = 8
# priority_live = 1
# priority_local = 16

[node.bootstrap_ascending]
# enable = true
# enable_databaser_scan = true
# enable_dependency_walker = true
# block_processor_threshold = 1000
# database_rate_limit = 256
# database_warmup_ratio = 10
# max_pull_count = 128
# channel_limit = 16
# throttle_coefficient = 8192
# throttle_wait = 100
# request_timeout = 3000
# max_requests = 1024

[node.bootstrap_ascending.account_sets]
# blocking_max = 262144
# consideration_count = 4
# cooldown = 3000
# priorities_max = 262144

[node.bootstrap_server]
# batch_size = 64
# max_queue = 16
# threads = 1

[node.diagnostics.txn_tracking]
# enable = false
# ignore_writes_below_block_processor_max_time = true
# min_read_txn_time = 5000
# min_write_txn_time = 500

[node.experimental]
# max_pruning_age = 300
# max_pruning_depth = 0
# secondary_work_peers = ["127.0.0.1:8076"]

[node.httpcallback]
# address = ""
# port = 0
# target = ""

[node.ipc.flatbuffers]
# skip_unexpected_fields_in_json = true
# verify_buffers = true

[node.ipc.local]
# allow_unsafe = false
# enable = false
# io_timeout = 15
# io_threads = -1
# path = "/tmp/nano"

[node.ipc.tcp]
# enable = false
# io_timeout = 15
# io_threads = -1
# port = 56000

[node.lmdb]
# map_size = 274877906944
# max_databases = 128
# sync = "always"

[node.message_processor]
# max_queue = 64
# threads = 2

[node.monitor]
# enable = true
# interval = 60

[node.optimistic_scheduler]
# enable = true
# gap_threshold = 32
# max_size = 65536

[node.hinted_scheduler]
# enable = true
# hinting_threshold = 10
# check_interval = 1000
# block_cooldown = 5000
# vacancy_threshold = 20

[node.priority_bucket]
# max_blocks = 8192
# max_elections = 150
# reserved_elections = 100

[node.rep_crawler]
# query_timeout = 60000

[node.request_aggregator]
# batch_size = 16
# max_queue = 128
# threads = 4

[node.statistics]
# max_samples = 16384

[node.statistics.log]
# filename_counters = "counters.stat"
# filename_samples = "samples.stat"
# headers = true
# interval_counters = 0
# interval_samples = 0
# rotation_count = 100

[node.vote_cache]
# age_cutoff = 900
# max_size = 65536
# max_voters = 64

[node.vote_processor]
# batch_size = 1024
# max_non_pr_queue = 32
# max_pr_queue = 256
# pr_priority = 3
# threads = 4

[node.websocket]
# address = "::1"
# enable = false
# port = 57000

[node.backlog_population]
# enable = true
# batch_size = 10000
# frequency = 10

[opencl]
# device = 0
# enable = false
# platform = 0
# threads = 1048576

[rpc]
# enable = false
# enable_sign_hash = false

[rpc.child_process]
# enable = false
# rpc_path = "/Users/ruimorais/rsnano-node/target/debug/nano_rpc"

